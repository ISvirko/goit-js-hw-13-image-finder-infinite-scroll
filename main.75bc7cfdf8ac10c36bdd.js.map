{"version":3,"sources":["webpack:///./js/refs.js","webpack:///./js/components/spinner.js","webpack:///./js/components/modalWindow.js","webpack:///./js/components/upDownArrow.js","webpack:///./js/masonry.js","webpack:///./js/picturesPage.js"],"names":["refs","searchForm","document","forms","gallery","querySelector","loadMoreBtn","toTopBtn","insertAdjacentHTML","spinner","classList","remove","add","openLargeImg","e","target","nodeName","instance","basicLightbox","dataset","source","show","closeBtn","addEventListener","closeModalHandler","window","code","close","removeEventListener","upDownArrowHandler","pageYOffset","scrollTo","top","documentElement","offsetHeight","behavior","masonryInstance","Masonry","columnWidth","itemSelector","gutter","percentPosition","transitionDuration","addMasonryLayout","pictures","elements","hits","map","pic","div","createElement","innerHTML","webformatURL","largeImageURL","likes","views","comments","downloads","pageURL","gridItemMarkup","makeGridItem","append","addItems","imagesLoaded","on","layout","bind","preventDefault","inputValue","query","value","infScroll","infScrollOnLoad","InfiniteScroll","responseType","history","path","this","pageIndex","response","JSON","parse","infScrollDisplayImgs","loadNextPage"],"mappings":"4JAOeA,EAPF,CACXC,WAAYC,SAASC,MAAMF,WAC3BG,QAASF,SAASG,cAAc,SAChCC,YAAaJ,SAASG,cAAc,kBACpCE,SAAUL,SAASG,cAAc,cC0BjCH,SAASG,cAAc,cAAcG,mBAAmB,YAhBzC,8mBAbjB,IAAMC,EAAUP,SAASG,cAAc,YAExB,aAEXI,EAAQC,UAAUC,OAAO,cAFd,aAMXF,EAAQC,UAAUE,IAAI,c,0BCkBXC,MAvBf,SAAsBC,GACpB,GAA0B,QAAtBA,EAAEC,OAAOC,SAAb,CAEA,IAAMC,EAAWC,SAAA,kBACGJ,EAAEC,OAAOI,QAAQC,OADpB,4GAKjBH,EAASI,OAET,IAAMC,EAAWpB,SAASG,cAAc,kCAExCiB,EAASC,iBAAiB,QAASC,GACnCC,OAAOF,iBAAiB,UAAWC,GAEnC,SAASA,EAAkBV,IACb,WAAXA,EAAEY,MAAqBZ,EAAEC,SAAWO,IAAaL,EAASU,QAE3DF,OAAOG,oBAAoB,UAAWJ,GACtCF,EAASM,oBAAoB,QAASJ,KCF3BK,MAnBf,WACE7B,EAAKO,SAASG,UAAUC,OAAO,YAC/BX,EAAKO,SAASG,UAAUE,IAAI,eAED,IAAvBa,OAAOK,cACT9B,EAAKO,SAASG,UAAUC,OAAO,eAC/BX,EAAKO,SAASG,UAAUE,IAAI,aAO9Ba,OAAOM,SAAS,CACdC,IAAK9B,SAAS+B,gBAAgBC,aAC9BC,SAAU,Y,sDCbRC,EAAkB,IAAIC,IAAQ,QAAS,CAC3CC,YAAa,cACbC,aAAc,aACdC,OAAQ,GACRC,iBAAiB,EACjBC,mBAAoB,SAqDPC,MAlDf,SAA0BC,GAAU,MAC5BC,EAAWD,EAASE,KAAKC,KAAI,SAAAC,GAAG,OAcxC,SAAsBA,GACpB,IAAMC,EAAM/C,SAASgD,cAAc,OAGnC,OAFAD,EAAIvC,UAAUE,IAAI,aAClBqC,EAAIE,UAIN,SAAwBH,GACtB,mDAEYA,EAAII,aAFhB,kBAE8CJ,EAAIK,cAFlD,oIAOQL,EAAIM,MAPZ,qGAWQN,EAAIO,MAXZ,kGAeQP,EAAIQ,SAfZ,yGAmBQR,EAAIS,UAnBZ,oCAsBWT,EAAIU,QAtBf,mFALgBC,CAAeX,GACxBC,EAlBmCW,CAAaZ,OACvD,EAAAhD,EAAKI,SAAQyD,OAAb,QAAuBhB,GACvBT,EAAgB0B,SAASjB,GAMzBkB,IAAa,SAASC,GACpB,WACA5B,EAAgB6B,OAAOC,KAAK9B,KCfhCpC,EAAKC,WAAWsB,iBAAiB,UAkCjC,SAA6BT,GAC3BA,EAAEqD,iBAWFnE,EAAKI,QAAQ+C,UAAb,iDARA,IAAMiB,EAAapE,EAAKC,WAAW4C,SAASwB,MAAMC,MAClD,IAAKF,EAAY,OACjBG,EAAUH,WAAaA,EAEvBI,OAzCFxE,EAAKI,QAAQmB,iBAAiB,QAASV,GACvCb,EAAKO,SAASgB,iBAAiB,QAASM,GAExC,IAEM0C,EAAY,IAAIE,IAAe,QAAS,CAC5CL,WAAY,GACZM,aAAc,OACdC,SAAS,EACTC,KAAM,WACJ,gHAAiHC,KAAKT,WAAtH,SAAyIS,KAAKC,UAA9I,yDAOJ,SAASN,IACPD,EAAUP,GAAG,QAAQ,SAAAe,IAUvB,SAA8BA,GAC5B,IAAMnC,EAAWoC,KAAKC,MAAMF,GAC5BpC,EAAiBC,GAXfsC,CAAqBH,GAErBtE,OAGF8D,EAAUY,eACV1E,IAXF8D,EAAUH,WAAa,GACvBI,M","file":"main.75bc7cfdf8ac10c36bdd.js","sourcesContent":["const refs = {\r\n  searchForm: document.forms.searchForm,\r\n  gallery: document.querySelector('.grid'),\r\n  loadMoreBtn: document.querySelector('.load-more-btn'),\r\n  toTopBtn: document.querySelector('.toTopBtn'),\r\n};\r\n\r\nexport default refs;\r\n","createSpinnerMarkup();\r\nconst spinner = document.querySelector('#spinner');\r\n\r\nexport default {\r\n  show() {\r\n    spinner.classList.remove('is-hidden');\r\n  },\r\n\r\n  hide() {\r\n    spinner.classList.add('is-hidden');\r\n  },\r\n};\r\n\r\nfunction createSpinnerMarkup() {\r\n  const markup = `<div class=\"spinner-overlay is-hidden\" id=\"spinner\">\r\n  <div class=\"sk-circle\">\r\n  <div class=\"sk-circle1 sk-child\"></div>\r\n  <div class=\"sk-circle2 sk-child\"></div>\r\n  <div class=\"sk-circle3 sk-child\"></div>\r\n  <div class=\"sk-circle4 sk-child\"></div>\r\n  <div class=\"sk-circle5 sk-child\"></div>\r\n  <div class=\"sk-circle6 sk-child\"></div>\r\n  <div class=\"sk-circle7 sk-child\"></div>\r\n  <div class=\"sk-circle8 sk-child\"></div>\r\n  <div class=\"sk-circle9 sk-child\"></div>\r\n  <div class=\"sk-circle10 sk-child\"></div>\r\n  <div class=\"sk-circle11 sk-child\"></div>\r\n  <div class=\"sk-circle12 sk-child\"></div>\r\n  </div>\r\n  </div>`;\r\n  document.querySelector('.container').insertAdjacentHTML('beforeend', markup);\r\n}\r\n","import * as basicLightbox from 'basiclightbox';\r\nimport 'basiclightbox/dist/basicLightbox.min.css';\r\nimport { refs } from '../refs';\r\n\r\nfunction openLargeImg(e) {\r\n  if (e.target.nodeName !== 'IMG') return;\r\n\r\n  const instance = basicLightbox.create(\r\n    `<div><img src='${e.target.dataset.source}' class='largeImg'/></div>\r\n    <button class='modal-close-btn' data-action=\"close-lightbox\"></button>`,\r\n  );\r\n\r\n  instance.show();\r\n\r\n  const closeBtn = document.querySelector('[data-action=\"close-lightbox\"]');\r\n\r\n  closeBtn.addEventListener('click', closeModalHandler);\r\n  window.addEventListener('keydown', closeModalHandler);\r\n\r\n  function closeModalHandler(e) {\r\n    (e.code === 'Escape' || e.target === closeBtn) && instance.close();\r\n\r\n    window.removeEventListener('keydown', closeModalHandler);\r\n    closeBtn.removeEventListener('click', closeModalHandler);\r\n  }\r\n}\r\n\r\nexport default openLargeImg;\r\n","import refs from '../refs';\r\n\r\nfunction upDownArrowHandler() {\r\n  refs.toTopBtn.classList.remove('toTopBtn');\r\n  refs.toTopBtn.classList.add('toBottomBtn');\r\n\r\n  if (window.pageYOffset === 0) {\r\n    refs.toTopBtn.classList.remove('toBottomBtn');\r\n    refs.toTopBtn.classList.add('toTopBtn');\r\n  }\r\n\r\n  smoothScrollHandler();\r\n}\r\n\r\nfunction smoothScrollHandler() {\r\n  window.scrollTo({\r\n    top: document.documentElement.offsetHeight,\r\n    behavior: 'smooth',\r\n  });\r\n}\r\n\r\nexport default upDownArrowHandler;\r\n","import Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport refs from './refs.js';\r\n\r\nconst masonryInstance = new Masonry('.grid', {\r\n  columnWidth: '.grid-sizer',\r\n  itemSelector: '.grid-item',\r\n  gutter: 10,\r\n  percentPosition: true,\r\n  transitionDuration: '0.3s',\r\n});\r\n\r\nfunction addMasonryLayout(pictures) {\r\n  const elements = pictures.hits.map(pic => makeGridItem(pic));\r\n  refs.gallery.append(...elements);\r\n  masonryInstance.addItems(elements);\r\n\r\n  onImagesLoaded();\r\n}\r\n\r\nfunction onImagesLoaded() {\r\n  imagesLoaded('.grid').on(\r\n    'progress',\r\n    masonryInstance.layout.bind(masonryInstance),\r\n  );\r\n}\r\n\r\nfunction makeGridItem(pic) {\r\n  const div = document.createElement('div');\r\n  div.classList.add('grid-item');\r\n  div.innerHTML = gridItemMarkup(pic);\r\n  return div;\r\n}\r\n\r\nfunction gridItemMarkup(pic) {\r\n  return `\r\n  <div class=\"photo-card\">\r\n  <img src=\"${pic.webformatURL}\" data-source=\"${pic.largeImageURL}\" width='360' />\r\n\r\n  <div class=\"stats\">\r\n    <p class=\"stats-item\">\r\n        <i class=\"material-icons\">thumb_up</i>\r\n        ${pic.likes}\r\n    </p>\r\n    <p class=\"stats-item\">\r\n        <i class=\"material-icons\">visibility</i>\r\n        ${pic.views}\r\n    </p>\r\n    <p class=\"stats-item\">\r\n        <i class=\"material-icons\">comment</i>\r\n        ${pic.comments}\r\n    </p>\r\n    <p class=\"stats-item\">\r\n        <i class=\"material-icons\">cloud_download</i>\r\n        ${pic.downloads}\r\n    </p>\r\n  </div>\r\n  <a href='${pic.pageURL}' target='_blank' rel='noopener norefferer'>Open in the source</a>\r\n  </div>\r\n  `;\r\n}\r\n\r\nexport default addMasonryLayout;\r\n","import InfiniteScroll from 'infinite-scroll';\r\n\r\nimport refs from './refs.js';\r\nimport spinner from './components/spinner';\r\nimport openLargeImg from './components/modalWindow';\r\nimport upDownArrowHandler from './components/upDownArrow.js';\r\nimport addMasonryLayout from './masonry';\r\n\r\nrefs.searchForm.addEventListener('submit', searchImagesHandler);\r\nrefs.gallery.addEventListener('click', openLargeImg);\r\nrefs.toTopBtn.addEventListener('click', upDownArrowHandler);\r\n\r\nconst apiKey = '16727206-7ae7a1f614d6d42142bf6389f';\r\n\r\nconst infScroll = new InfiniteScroll('.grid', {\r\n  inputValue: '',\r\n  responseType: 'text',\r\n  history: false,\r\n  path: function () {\r\n    return `https://cors-anywhere.herokuapp.com/https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.inputValue}&page=${this.pageIndex}&per_page=12&key=${apiKey}`;\r\n  },\r\n});\r\n\r\ninfScroll.inputValue = '';\r\ninfScrollOnLoad();\r\n\r\nfunction infScrollOnLoad() {\r\n  infScroll.on('load', response => {\r\n    infScrollDisplayImgs(response);\r\n\r\n    spinner.hide();\r\n  });\r\n\r\n  infScroll.loadNextPage();\r\n  spinner.show();\r\n}\r\n\r\nfunction infScrollDisplayImgs(response) {\r\n  const pictures = JSON.parse(response);\r\n  addMasonryLayout(pictures);\r\n}\r\n\r\nfunction searchImagesHandler(e) {\r\n  e.preventDefault();\r\n  clearGallery();\r\n\r\n  const inputValue = refs.searchForm.elements.query.value;\r\n  if (!inputValue) return;\r\n  infScroll.inputValue = inputValue;\r\n\r\n  infScrollOnLoad();\r\n}\r\n\r\nfunction clearGallery() {\r\n  refs.gallery.innerHTML = `\r\n      <div class=\"grid-sizer\"></div>\r\n      `;\r\n}\r\n"],"sourceRoot":""}